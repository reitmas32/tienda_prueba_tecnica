[tool.poetry]
name = "teinda"
version = "0.0.1"
description = ""
authors = ["Rafael Zamora <rafa.zamora.rals@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django="5.0.4"
pydantic-settings = "^2.2.1"
dj-database-url = "^2.1.0"
psycopg2-binary = "^2.9.9"
drf-yasg = "^1.21.7"
loguru = "^0.7.2"
drf-pydantic-openapi = "^0.5.2"
cryptocode = "^0.1"
django-mssql-backend = "^2.8.1"
django-cors-headers = "^4.3.1"

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
pre-commit = "^3.6.0"
ruff = "^0.1.13"
pytest = "^7.4.4"
coverage = "^7.4.0"


[tool.poetry.group.testing.dependencies]
coverage = "^7.4.0"
httpx = "^0.26.0"
pytest = "^7.4.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py310']

[tool.ruff]
src = ["src"]
target-version = "py310"
select = ["ALL"]
ignore = [
    "ANN",      # Type hints related, let mypy/pyright handle these.
    "COM812",   # "Trailing comma missing". If black is happy, I'm happy.
    "D104",     # Missing docstring in public package
    "D100",     # Missing docstring in public module
    "E501",     # "Line too long". If black is happy, I'm happy.
    "EM101",    # "Exception must not use a string literal, assign to variable first"
    "EM102",    # "Exception must not use an f-string literal, assign to variable first"
    "SIM108",   # "Use ternary operator ...". Ternary is harmful for readability in some cases.
    "TRY003",   # "Avoid specifying long messages outside the exception class"
    "FIX002",   # Allow TODOs in the code
    "TD002",    # Missing author in TODO
    "TD003",    # Allow simples TODOs
    "RUF012",
    "A002",     #
    "A003",     #
    "B008",     # Do not perform function call `function` in argument defaults
    "D",        # Documentation,
    "FBT002",   # Boolean default positional argument in function definition
    "PT009",    # Use asserts in test
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.coverage.run]
omit = [
    "src/tests/*",
    "src/config/*",
    "__init__*",
]

[tool.pytest.ini_options]
pythonpath = ["./src"]
